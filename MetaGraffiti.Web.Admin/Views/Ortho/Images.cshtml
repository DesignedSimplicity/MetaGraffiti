@using MetaGraffiti.Web.Admin.Models;
@model OrthoImagesViewModel

@Html.Partial("_Nav")

<div>
	<span class="h2">
		@if (Model.IsSelected(Model.ImageSourceRoot))
		{
			<span>Photos</span>
		}
		else
		{
			<a class="ortho-color" href="@OrthoViewModel.GetBrowseImagesUrl()">Photos</a>
		}
	</span>
	<span>
		@foreach (var year in Model.ImageSourceRoot.GetDirectories())
		{
			<span class="h3">
				\<a class="@(Model.IsSelected(year) || Model.IsAncestor(year) ? "text-danger" : "ortho-color")" href="@OrthoViewModel.GetBrowseImagesUrl(year.Name)">@year.Name</a>
				@if (Model.IsSelected(year) || Model.IsAncestor(year))
				{
					var countries = (Model.IsSelected(year) ? Model.SelectedDirectory.GetDirectories() : Model.SelectedDirectory.Parent.GetDirectories());
					<span class="h4">
						@foreach (var country in countries)
						{
							<span>\<a class="@(Model.IsSelected(country) ? "text-danger" : "ortho-color")" href="@OrthoViewModel.GetBrowseImagesUrl(year.Name + "/" + country.Name)">@country.Name</a></span>
						}
					</span>
					<span>&nbsp;</span>
				}
			</span>
		}
	</span>
</div>
<div class="clearfix"></div>
<br />
<div>
	@if (Model.HasSources)
	{
		<table class="table table-sm table-striped table-bordered">
			<thead class="table-dark">
				<tr>
					<td>#</td>
					<td>File</td>
					<td>Photo</td>
					<td class="text-center">Date</td>
					<td class="text-center">Time</td>
					<td>Labels</td>
					<td>File Size</td>
					<td>Dimensions</td>
					<td>Cooridiates</td>
					<td>Country</td>
					<td>Regions</td>
					<td>Places</td>
				</tr>
			</thead>
			<tbody>
				@{
					var index = 0;
					foreach (var source in Model.Sources.OrderBy(x => x.File.Name))
					{
						<tr>
							<td>@(index + 1)</td>
							<td>
								<a class="foto-color" href="@FotoViewModel.GetImportUrl(source.File.FullName)">@source.File.Name</a>
							</td>
							<td></td>
							<td class="text-center">@(source.Image.Exif.DateTaken?.ToString("yyyy-MM-dd"))</td>
							<td class="text-center">@(source.Image.Exif.DateTaken?.ToShortTimeString())</td>
							<td>@(source.Image.Exif.CameraMake) @(source.Image.Exif.CameraModel)</td>
							<td>@String.Format("{0:0.0} MB", source.Image.File.FileSize / 1024.0 / 1024.0)</td>
							<td>@source.Image.Dimenions.Width x @source.Image.Dimenions.Height</td>
							<td class="small">@(source.Image.Exif?.Latitude?.ToString("#.#####")) x @(source.Image.Exif?.Longitude?.ToString("#.#####"))</td>
							<td>@(source.Country?.Name)</td>
							<td>
								@foreach (var region in source.Regions)
								{
									<div>@region.RegionName</div>
								}
							</td>
							<td>
								@foreach (var place in source.Places)
								{
									<div>@place.Name</div>
								}
							</td>
						</tr>
						index++;
					}
				}
			</tbody>
		</table>
	}
</div>