@model MetaGraffiti.Web.Admin.Models.GeoViewModel

@Html.Partial("_Nav")
@{
	var c = Model.SelectedCountry;
}

<script src="https://maps.googleapis.com/maps/api/js?key=@(AutoConfig.GoogleMapsApiKey)"></script>
<script src="~/Scripts/_graffiti/googleMaps.js"></script>
<script>
	var _editor = null;
	var _popup = null;
	var _country = {
		name: "@c.Name",
		center: {
			lat: @c.Center.Latitude,
			lng: @c.Center.Longitude
		},
		bounds: {
			north: @c.Bounds.NorthWest.Latitude,
			south: @c.Bounds.SouthEast.Latitude,
			west: @c.Bounds.NorthWest.Longitude,
			east: @c.Bounds.SouthEast.Longitude,
		}
	};

	var _regions = [
		@foreach (var r in c.Regions.OrderBy(x => x.RegionName))
		{
			<text>
			{
				region: "@r.RegionName",
				bounds: {
					north: @r.Bounds.NorthWest.Latitude,
					south: @r.Bounds.SouthEast.Latitude,
					west: @r.Bounds.NorthWest.Longitude,
					east: @r.Bounds.SouthEast.Longitude,
				},
			},</text>
		}
	]

	$(document).ready(function () {
		initMap();

		for (i = 0; i < _regions.length; i++) {
			var color = _trackColors[i % 10];

			var region = _regions[i];
			region.rectangle = showBounds(region.bounds, color);
			
			$("table > tbody > tr").eq(i).children().eq(0).css('background-color', color);
		}

		showBounds(_country.bounds, null, 0);
		markPoint(_country.center.lat, _country.center.lng, _country.name)

		$(".js-region-row").click(function () {
			if (_editor) _editor.setMap(null);
			if (_popup) _popup.close();

			$(".js-region-row").css("font-weight", "");
			$(this).css("font-weight", "bold");
			var i = $(this).data("index");
			var region = _regions[i];

			_editor = editBounds(region.bounds);
			_editor.addListener('bounds_changed', showWindow);

		});

		function showWindow() {
			if (!_popup) _popup = new google.maps.InfoWindow();

			var ne = _editor.getBounds().getNorthEast();
			var sw = _editor.getBounds().getSouthWest();

			var content = 'North West: ' + ne.lat().toFixed(6) + ' x ' + sw.lng().toFixed(6) + '<br />' + 'South East: ' + sw.lat().toFixed(6) + ' x ' + ne.lng().toFixed(6);
			_popup.setContent(content);

			var nw = new google.maps.LatLng(ne.lat(), sw.lng());
			_popup.setPosition(nw);

			_popup.open(_mapGoogle);
		}
	});
</script>

<div id="map-container">
	<div id="map">
	</div>
</div>

<div class="row">
	<div class="col-sm-6">
		<h2><a href="/geo/countries/">Countries</a> \ @c.Name</h2>
		<table class="table table-striped table-sm">
			<thead class="thead-dark">
				<tr>
					<th class="text-center">#</th>
					<th>Abbr</th>
					<th>Region</th>
					<th>Center</th>
					<th>North West</th>
					<th>South East</th>
				</tr>
			</thead>
			<tbody>
				@{
					var count = 0;
					foreach (var r in c.Regions.OrderBy(x => x.RegionName))
					{
						<tr class="js-region-row" data-index="@(count)">
							<td class="text-center">@(++count)</td>
							<td>@r.RegionAbbr</td>
							<td>@r.RegionName</td>
							<td>@r.Center.Latitude.ToString("0.000000") x @r.Center.Longitude.ToString("0.000000")</td>
							<td>@r.Bounds.NorthWest.Latitude.ToString("0.000000") x @r.Bounds.NorthWest.Longitude.ToString("0.000000")</td>
							<td>@r.Bounds.SouthEast.Latitude.ToString("0.000000") x @r.Bounds.SouthEast.Longitude.ToString("0.000000")</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
</div>