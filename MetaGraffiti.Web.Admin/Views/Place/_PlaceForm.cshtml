@using MetaGraffiti.Web.Admin.Models;
@model CartoPlaceFormModel2
@{
	var place = Model.Place;
	var edit = Model.Data;
}

<script>
	var _place = @JsonHelper.GetJson(place);
	var _marker = null;
	var _bounds = null;

	$(document).ready(function () {
		initMap();

		_marker = dragPoint(_place.center.lat, _place.center.lng, _place.name);
		_marker.addListener('dragend', updateCenter);

		_bounds = editBounds(_place.bounds, null, '');
		_bounds.addListener('bounds_changed', updateBounds);

		function updateCenter() {
			var c = _marker.getPosition();
			$("#CenterLatitude").val(c.lat());
			$("#CenterLongitude").val(c.lng());
		}

		function updateBounds() {
			var ne = _bounds.getBounds().getNorthEast();
			var sw = _bounds.getBounds().getSouthWest();

			$("#NorthLatitude").val(ne.lat());
			$("#WestLongitude").val(sw.lng());
			$("#SouthLatitude").val(sw.lat());
			$("#EastLongitude").val(ne.lng());
		}

		$(".js-google-key").click(function () {
			$("#GoogleKey").val("");
			$("#GoogleKeyDisplay").val("");
		});

		$(".js-region-lookup").click(function () {
			lookupRegion("#RegionField", _place.center);
		});

		$(".js-timezone-lookup").click(function () {
			lookupTimezone("#TimezoneField", _place.center);
		});

		initGeoCountryLookup("#CountryField");
		initCartoPlaceTypeLookup("#PlaceTypeField");
	});
</script>

<div class="form-row">
	<div class="col">
		<div class="form-group">
			<label for="Name">Name</label>
			<input type="text" class="form-control" name="Name" value="@edit.Name" />
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="LocalName">Local Name</label>
			<input type="text" class="form-control" name="LocalName" value="@edit.LocalName" />
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="DisplayAs">Display As</label>
			<input type="text" class="form-control" name="DisplayAs" value="@edit.DisplayAs" />
		</div>
	</div>
</div>
<div class="form-row">
	<div class="col">
		<div class="form-group">
			<label for="Description">Description</label>
			<div class="input-group">
				<input type="text" class="form-control" name="Description" value="@edit.Description" />
				<div class="input-group-append">
					<a target="_blank" class="btn btn-outline-info" href="http://www.google.com/search?q=@("wiki " + edit.Name + " " + edit.Country)&btnI"><i class="fab fa-wikipedia-w"></i> Wikipedia</a>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="form-row">
	<div class="col">
		<div class="form-group">
			<label for="PlaceType">Place Type</label>
			<input type="text" class="form-control" name="PlaceType" id="PlaceTypeField" value="@edit.PlaceType" />
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="PlaceFlags">Flags</label>
			<input type="text" class="form-control" disabled name="PlaceFlags" value="" />
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="IconKey">Icon</label>
			<input type="text" class="form-control" disabled name="IconKey" value="" />
		</div>
	</div>
</div>

<hr />
<div class="form-row">
	<div class="col">
		<div class="form-group">
			<label for="Address">Address</label>
			<input type="text" class="form-control" name="Address" value="@edit.Address" />
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="Locality">Locality</label>
			<input type="text" class="form-control" name="Locality" value="@edit.Locality" />
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="Region">Region</label>
			<div class="input-group">
				<input type="text" class="form-control @CssHelper.GetFieldInvalidCss(Model.Political.IsRegionValid())" id="RegionField" name="Region" value="@Model.Region" />
				<div class="input-group-append">
					<button class="btn btn-outline-secondary js-region-lookup" type="button">@IconHelper.LookupIcon</button>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="form-row">
	<div class="col">
		<div class="form-group">
			<label for="Postcode">Postcode</label>
			<input type="text" class="form-control" name="Postcode" value="@edit.Postcode" />
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="Country">Country</label>
			<input type="text" name="Country" id="CountryField" class="form-control @CssHelper.GetFieldInvalidCss(Model.Political.IsCountryValid())" value="@Model.Country" />
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="Subregions">Subregions</label>
			<input type="hidden" name="Subregions" value="@edit.Subregions" />
			<input type="text" class="form-control" readonly value="@edit.Subregions" />
		</div>
	</div>
</div>

<hr />
<div class="form-row">
	<div class="col">
		<div class="form-group">
			<label for="PlaceKey">Place Key</label>
			<input type="hidden" name="PlaceKey" value="@(Model.IsPreview ? "" : edit.PlaceKey)">
			<input type="text" class="form-control" readonly value="@(Model.IsPreview ? "" : edit.PlaceKey)">
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="NorthLatitude">North West</label>
			<div class="input-group">
				<input type="text" class="form-control" name="NorthLatitude" id="NorthLatitude" placeholder="Latitude" value="@(edit.NorthLatitude.ToString("0.0000000000"))">
				<input type="text" class="form-control" name="WestLongitude" id="WestLongitude" placeholder="Longitude" value="@(edit.WestLongitude.ToString("0.0000000000"))">
			</div>
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="CenterLatitude">Center</label>
			<div class="input-group">
				<input type="text" class="form-control" name="CenterLatitude" id="CenterLatitude" placeholder="Latitude" value="@edit.CenterLatitude.ToString("0.0000000000")">
				<input type="text" class="form-control" name="CenterLongitude" id="CenterLongitude" placeholder="Longitude" value="@edit.CenterLongitude.ToString("0.0000000000")">
			</div>
		</div>
	</div>
</div>
<div class="form-row">
	<div class="col">
		<div class="form-group">
			<label for="GoogleKey">Google Key</label>
			<input type="hidden" name="GoogleKey" id="GoogleKey" value="@edit.GoogleKey">
			<div class="input-group">
				<input type="text" class="form-control" id="GoogleKeyDisplay" readonly value="@edit.GoogleKey">
				<div class="input-group-append">
					<button class="btn btn-outline-warning js-google-key" type="button">@IconHelper.RemoveIcon Remove</button>
				</div>
			</div>
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="SouthLatitude">South East</label>
			<div class="input-group">
				<input type="text" class="form-control" name="SouthLatitude" id="SouthLatitude" placeholder="Latitude" value="@(edit.SouthLatitude.ToString("0.0000000000"))">
				<input type="text" class="form-control" name="EastLongitude" id="EastLongitude" placeholder="Longitude" value="@(edit.EastLongitude.ToString("0.0000000000"))">
			</div>
		</div>
	</div>
	<div class="col">
		<div class="form-group">
			<label for="TimezoneKey">Timezone</label>
			<div class="input-group">
				<input type="text" class="form-control @CssHelper.GetFieldInvalidCss(Model.Political.IsTimezoneOptionalButNotUTCValid())" id="TimezoneField" name="Timezone" value="@Model.Timezone">
				<div class="input-group-append">
					<button class="btn btn-outline-secondary js-timezone-lookup" type="button">@IconHelper.LookupIcon</button>
				</div>
			</div>
		</div>
	</div>
</div>