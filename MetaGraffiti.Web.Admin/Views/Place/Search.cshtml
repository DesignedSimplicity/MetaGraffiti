@using MetaGraffiti.Web.Admin.Models;
@model PlaceViewModel

@Html.Partial("_Nav")

<script>
	var _places = @JsonHelper.GetJson(Model.SearchResults);

	$(document).ready(function () {
		initMap();

		initCartoPlaces(_places, '@PlaceViewModel.GetDisplayUrl("{key}")');

		drawCartoPlaces(2);
		fitCartoPlaces();

		initActionRows(actionCartoPlaceBounceMarkerAndDrawBounds, actionCartoPlaceToFitBounds);

		$(".js-reset-view").click(function () {
			fitCartoPlaces();
			drawCartoPlaceBounds(-1);
			bounceCartoPlaceMarker(-1);
		});
	});
</script>

<div id="map-container">
	<div id="map">
	</div>
</div>

<div class="row">
	<div class="col-sm-6">
		<div>
			<span class="h2">
				Search Places
			</span>
			<div class="float-right">
				@Html.Partial("Buttons/ResetView")
			</div>
		</div>
		<hr />
		<div class="row">
			<div class="col">
				<form method="post" action="@PlaceViewModel.GetSearchUrl()">
					<div class="form-group">
						<label for="name">Name</label>
						<div class="input-group">
							<input type="text" class="form-control" name="Name" placeholder="Name" value="@Model.SearchCriteria.Name">
							<div class="input-group-append">
								<button class="btn btn-primary" type="submit">@IconHelper.SearchIcon Search</button>
							</div>
						</div>
					</div>
					<!--
					<div class="form-group">
						<label for="description">Region</label>
						<input type="text" class="form-control" name="Region" placeholder="Region" value="@Model.SearchCriteria.Region">
					</div>
					<div class="form-group">
						<label for="description">Country</label>
						<input type="text" class="form-control" name="Country" placeholder="Country" value="@Model.SearchCriteria.Country">
					</div>
						-->
				</form>
			</div>
			<div class="col">
				<form method="post" action="@PlaceViewModel.GetSearchUrl()">
					<div class="form-group">
						<label for="timezone">Position</label>
						<div class="input-group">
							<input type="text" class="form-control" name="Latitude" placeholder="Latitude" value="@Model.SearchCriteria.Latitude">
							<input type="text" class="form-control" name="Longitude" placeholder="Longitude" value="@Model.SearchCriteria.Longitude">
							<div class="input-group-append">
								<button class="btn btn-info" type="submit">@IconHelper.GeocodeIcon Geocode</button>
							</div>
						</div>
					</div>
				</form>
			</div>
		</div>
		<hr />
		<h2>Places</h2>
		<table class="table table-striped table-sm">
			<thead class="thead-dark">
				<tr>
					<th class="text-center">#</th>
					<th>Name</th>
					<th>Type</th>
					<th>Locality</th>
					<th>Region</th>
					<th>Country</th>
					<th>Action</th>
				</tr>
			</thead>
			<tbody>
				@{
					var count = 0;
					foreach (var p in Model.SearchResults)
					{
						var existing = (p.Key != p.GoogleKey);
						<tr class="js-mappable-row @(existing ? " table-primary" : "" )">
							<td class="text-center h5">@(++count)</td>
							<td class="h5">
								@if (existing)
								{
									<a href="@PlaceViewModel.GetDisplayUrl(p.Key)">@p.Name</a>
								}
								else
								{
									<a href="@PlaceViewModel.GetPreviewUrl(p.GoogleKey, Model.SearchCriteria.Name)">@p.Name</a>
								}
							</td>
							<td>@p.PlaceType</td>
							<td>@p.Locality</td>
							<td>@(p.Region?.RegionName ?? "")</td>
							<td>@p.Country.Name</td>
							<td>
								<a class="btn btn-sm btn-primary" href="@PlaceViewModel.GetPreviewUrl(p.GoogleKey, Model.SearchCriteria.Name)">@IconHelper.PreviewIcon Preview</a>
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
</div>