@using MetaGraffiti.Web.Admin.Models;
@model TrackViewModel

@Html.Partial("_Nav")

@{
	var extract = Model.SelectedExtract;
}

<script src="https://maps.googleapis.com/maps/api/js?key=@(AutoConfig.GoogleMapsApiKey)"></script>
<script src="~/Scripts/_graffiti/googleMaps.js"></script>
<script>
	var _marker = null;
	var _track = @Model.GetExtractJson();

	$(document).ready(function () {
		initMap();
		loadTrack();

		$(".js-point-row").hover(function () {
			if (_marker != null) _marker.setMap(null);

			var index = $(this).index() - 1;
			var point = _track.points[index];
			_marker = markPoint(point.lat, point.lng, point.id);
		});

		$(".js-point-row").click(function () {
			var index = $(this).index() - 1;
			var point = _track.points[index];
			gotoPoint(point.lat, point.lng);
		});
	});

	function loadTrack() {
		var points = _track.points;
		var last = points.length - 1;

		showTrack(points);
		markStart(points[0].lat, points[0].lng);
		markStop(points[last].lat, points[last].lng);
	}
</script>

<div id="map-container">
	<div id="map">
	</div>
</div>

<div class="row">
	<div class="col-sm-6">
		<div class="row">
			<div class="col-sm-6">
				<form method="post" action="@TrackViewModel.GetExtractUrl()">
					<input type="hidden" name="Uri" value="@extract.SourceUri" />
					<div class="form-group">
						<div class="input-group">
							<input type="text" class="form-control" name="Name" value="@extract.Name">
							<div class="input-group-append">
								<button type="submit" class="btn btn-primary">Extract Track</button>
							</div>
						</div>
					</div>
				</form>
			</div>
			<div class="col-sm-6">
				<div class="h4">
					<span class="badge badge-secondary">
						@extract.Points.Count points
					</span>
					<span class="badge badge-success">
						@Model.TotalDistance(extract).ToString("#,##0.0") km
					</span>
					<span class="badge badge-info">
						@Model.ElapsedTime(extract)
					</span>
				</div>
			</div>
		</div>
		<table class="table table-striped table-bordered table-sm">
			<tr class="thead-dark">
				<th>Point #</th>
				<th>Timestamp</th>
				<th>Lat / Long</th>
				<th>Elevation</th>
				<th>Course</th>
				<th>M/S</th>
				<th>GPS</th>
				<th>HDOP</th>
				<th>VDOP</th>
				<th>PDOP</th>
			</tr>
			@{
				var index = 0;
				foreach (var p in extract.Points)
				{
					<tr class="js-point-row">
						<td>@((index + 1).ToString("0000"))</td>
						<td>@p.Timestamp.Value.ToString("yyyy-MM-dd") @p.Timestamp.Value.ToString("hh:mm:ss tt")</td>
						<td>@p.Latitude.ToString("0.000000"), @p.Longitude.ToString("0.000000")</td>
						<td class="text-center">@((p.Elevation ?? 0).ToString("#,##0"))</td>
						<td class="text-center">@((p.Course ?? 0).ToString("##0"))</td>
						<td class="text-center table-@Model.GetSpeedCss(p.Speed)">@((p.Speed ?? 0).ToString("#,##0.0"))</td>
						<td class="text-center table-@Model.GetSatsCss(p.Sats)">@p.Sats</td>
						<td class="text-center table-@Model.GetDOPCss(p.HDOP)">@p.HDOP</td>
						<td class="text-center table-@Model.GetDOPCss(p.VDOP)">@p.VDOP</td>
						<td class="text-center table-@Model.GetDOPCss(p.PDOP)">@p.PDOP</td>
					</tr>
					index++;
				}
			}
		</table>
	</div>
</div>
