@using MetaGraffiti.Web.Admin.Models;
@model TrackViewModel

@Html.Partial("_Nav")

@{
	var edit = Model.EditTrack;
	var track = edit.TopoTrack;
}

<script>
	var _marker = null;
	var _bounds = null;
	var _start = @JsonHelper.GetJson(track.StartPlace);
	var _finish = @JsonHelper.GetJson(track.FinishPlace);
	var _nearby = @JsonHelper.GetJson(edit.NearbyPlaces);
	var _contains =@JsonHelper.GetJson(edit.ContainedPlaces);
	var _track = @JsonHelper.GetJson(track);

	$(document).ready(function () {
		initMap();

		loadTrack();

		$(".js-show-start").hover(function () {
			if (_bounds != null) _bounds.setMap(null);
			_bounds = showBounds(_start.bounds, "#28a745");
		});

		$(".js-show-finish").hover(function () {
			if (_bounds != null) _bounds.setMap(null);
			_bounds = showBounds(_finish.bounds, "#dc3545");
		});

		$(".js-show-nearby").hover(function () {
			var index = $(this).parent().index();
			var color = getMapColor(index);

			if (_bounds != null) _bounds.setMap(null);
			_bounds = showBounds(_nearby[index].bounds, color);
		});

		$(".js-show-contains").hover(function () {
			var index = $(this).parent().index();
			var color = getMapColor(index);

			if (_bounds != null) _bounds.setMap(null);
			_bounds = showBounds(_contains[index].bounds, color);
		});

		$(".js-show-bounds").hover(function () {
			$(".js-show-bounds").removeClass("table-secondary");
			$(this).addClass("table-secondary");
		});

		$(".js-reset-view").click(function () {
			if (_bounds != null) _bounds.setMap(null);
			var all = calcBounds(_track.points);
			_mapGoogle.fitBounds(all);
		});
	});

	function loadTrack() {
		var points = _track.points;
		var last = points.length - 1;

		showTrack(points);
		markStart(points[0].lat, points[0].lng);
		markFinish(points[last].lat, points[last].lng);
	}
</script>

<div id="map-container">
	<div id="map">
	</div>
</div>

<div class="row">
	<div class="col-sm-6">
		<div class="h2">
			@IconHelper.TrackIcon Preview Track
			<div class="float-right">
				<a class="btn btn-outline-success js-confirm-dirty" href="@TrackViewModel.GetManageUrl()">@IconHelper.ListIcon Manage Track Edits</a>
				@Html.Partial("Buttons/ResetView")
			</div>
		</div>
		<hr />
		<div class="row">
			<div class="col">
				<div class="form-group">
					<div>
						<label for="name"><i class="far fa-file-alt"></i> Name</label>
						<span class="float-right h5">
							@Html.Partial("Widgets/TopoStatsPills", new TopoStatsPillsModel(track.Stats, false))
						</span>
					</div>
					<form method="post" action="@TrackViewModel.GetExtractUrl()">
						<input type="hidden" name="Source" value="@track.Source" />
						<div class="form-group">
							<div class="input-group">
								<input type="text" class="form-control" name="Name" value="@track.Name" />
								<div class="input-group-append">
									<button type="submit" class="btn btn-success">@IconHelper.ExtractIcon Extract</button>
								</div>
							</div>
						</div>
					</form>
				</div>

			</div>
			<div class="col">
				<div class="form-group">
					<label for="name"><i class="fas fa-folder"></i> Directory</label>
					<div class="input-group">
						<input type="text" class="form-control" readonly value="@edit.File.DirectoryName" />
						<div class="input-group-append">
							<a class="btn btn-secondary" href="@OrthoViewModel.GetBrowseTracksUrl(edit.File.DirectoryName)"><i class="fas fa-folder-open"></i> Browse</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		<hr />
		<div class="row h3">
			<div class="col-sm-2 text-success">@IconHelper.StartIcon Start</div>
			<div class="col-sm-8">
				@if (track.StartPlace != null)
				{
					<div class="pb-2">
						<span class="p-1 carto-color js-show-start js-show-bounds">@IconHelper.BoundsIcon</span>
						<a href="@PlaceViewModel.GetDisplayUrl(track.StartPlace.Key)">
							@track.StartPlace.Name
						</a>
					</div>
				}
			</div>
			<div class="col-sm-2 text-right">
				<a class="btn btn-outline-primary" href="@PlaceViewModel.GetSearchUrl(track.StartPoint)">@IconHelper.SearchIcon Lookup</a>
			</div>
		</div>
		<div class="row h3">
			<div class="col-sm-2 text-danger">@IconHelper.FinishIcon Finish</div>
			<div class="col-sm-8">
				@if (track.FinishPlace != null)
				{
					<div class="pb-2">
						<span class="p-1 carto-color js-show-finish js-show-bounds">@IconHelper.BoundsIcon</span>
						<a href="@PlaceViewModel.GetDisplayUrl(track.FinishPlace.Key)">@track.FinishPlace.Name</a>
					</div>
				}
			</div>
			<div class="col-sm-2 text-right">
				<a class="btn btn-outline-primary" href="@PlaceViewModel.GetSearchUrl(track.FinishPoint)">@IconHelper.SearchIcon Lookup</a>
			</div>
		</div>
		<div class="row h4">
			<div class="col-sm-2">
				<i class="far fa-object-ungroup"></i> Nearby
			</div>
			<div class="col-sm-8">
				@foreach (var place in Model.EditTrack.NearbyPlaces)
				{
					<div class="pb-2">
						<span class="p-1 h3 carto-color js-show-nearby js-show-bounds">@IconHelper.BoundsIcon</span>
						<a href="@PlaceViewModel.GetDisplayUrl(place.Key)">@place.Name</a>
					</div>
				}
			</div>
		</div>
		<div class="row h4">
			<div class="col-sm-2">
				<i class="far fa-object-group"></i> Contains
			</div>
			<div class="col-sm-8">
				@foreach (var place in Model.EditTrack.ContainedPlaces)
				{
					<div class="pb-2">
						<span class="p-1 h3 carto-color js-show-contains js-show-bounds">@IconHelper.BoundsIcon</span>
						<a href="@PlaceViewModel.GetDisplayUrl(place.Key)">@place.Name</a>
					</div>
				}
			</div>
		</div>
		<hr />
		<div class="row h5">
			<div class="col-sm-2">Country:</div>
			<div class="col-sm-8">
				<a class="topo-color" href="@TopoViewModel.GetCountryUrl(track.Trail.Country)">@track.Trail.Country.Name</a>
				@if (track.Trail.Region != null)
				{
					<span> \ <a class="topo-color" href="@TopoViewModel.GetCountryUrl(track.Trail.Country.Name, track.Trail.Region.RegionName)">@track.Trail.Region.RegionName</a></span>
				}
			</div>
		</div>
		<div class="row h5">
			<div class="col-sm-2">Timezone:</div>
			<div class="col-sm-8">
				<a class="geo-color" href="@GeoViewModel.GetTimezoneUrl(track.Trail.Timezone)">@track.Trail.Timezone.Name</a> <small>(@track.Trail.Timezone.DisplayOffsetUTC)</small>
			</div>
		</div>
	</div>
</div>
