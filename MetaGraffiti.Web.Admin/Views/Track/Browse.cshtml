@using MetaGraffiti.Web.Admin.Models;
@model TrackViewModel

@Html.Partial("_Nav")

@if (Model.HasError)
{
	<div class="alert alert-danger">@Model.ErrorMessages.First()</div>
}
else
{
	<div>
		<div class="float-left">
			<div>
				<span class="h2"><a href="@TrackViewModel.GetBrowseUrl(Model.Directory.Parent.FullName)">Browse:</a></span>
				<span class="h3">@Model.Directory.FullName</span>
			</div>
			@{
				var dirs = Model.Directory.GetDirectories();
				if (dirs.Count() > 0)
				{
					<br />
					<div class="row">
						<div class="col-sm-6">
							<table class="table table-striped">
								<thead class="table-dark">
									<tr>
										<th>Path</th>
										<th>Name</th>
										<th class="text-right">Folders</th>
										<th class="text-right">Tracks</th>
									</tr>
								</thead>
								<tbody>
									@foreach (var dir in dirs)
									{
										<tr>
											<td>
												<a href="@TrackViewModel.GetBrowseUrl(dir.FullName)">@dir.FullName</a>
											</td>
											<td>
												<span class="h4">@dir.Name</span>
											</td>
											<td class="h5 text-right">
												@(dir.GetDirectories().Count() > 0 ? dir.GetDirectories().Count().ToString() : "")
											</td>
											<td class="h5 text-right">
												@(dir.GetFiles("*.gpx").Count() > 0 ? dir.GetFiles("*.gpx").Count().ToString() : "")
											</td>
										</tr>
									}
								</tbody>
							</table>
						</div>
					</div>
				}
			}
		</div>
		<form class="form-inline float-right" method="get" action="@TrackViewModel.GetBrowseUrl("")">
			<div class="input-group">
				<div class="input-group-prepend">
					<span class="input-group-text">Uri</span>
				</div>
				<input type="text" class="form-control" name="Uri" value="@Model.Directory.FullName" />
				<div class="input-group-append">
					<button type="submit" class="btn btn-primary">Browse</button>
				</div>
			</div>
			&nbsp;
			<a class="btn btn-info" href="@TrackViewModel.GetBrowseRootUrl()">Root</a>
			&nbsp;
			<a class="btn btn-success" href="@TrackViewModel.GetBrowseCurrentUrl()">Newest</a>
			&nbsp;
			<a class="btn btn-@(Model.Extracts.Count() == 0? "secondary" : "warning")" href="@TrackViewModel.GetManageUrl()">Current</a>
		</form>
	</div>
	<div class="clearfix"></div>
	<br />
	<div>
		@if (Model.Sources.Count > 0)
		{
			<table class="table table-sm table-striped table-bordered">
				<thead class="table-dark">
					<tr>
						<td>#</td>
						<td>File</td>
						<td>Trail</td>
						<td class="text-center">Date</td>
						<td class="text-center">Time</td>
						<td>Labels</td>
						<td>Time (hours)</td>
						<td>Distance (KM)</td>
						<td>Country</td>
						<td>Regions</td>
						<td>Places</td>
						<td>Actions</td>
					</tr>
				</thead>
				<tbody>
					@{
						var index = 0;
						foreach (var source in Model.Sources.OrderBy(x => x.LocalTime))
						{
							<tr>
								<td>@(index + 1)</td>
								<td>
									<a href="@TrackViewModel.GetPreviewUrl(source.Uri)">@source.FileName</a>
								</td>
								<td>
									@if (source.Trail != null)
									{
										<a class="font-weight-bold" href="@TrailViewModel.GetDisplayUrl(source.Trail.ID)">@source.Trail.Name</a>
									}
								</td>
								<td class="text-center">@source.LocalTime.ToString("yyyy-MM-dd")</td>
								<td class="text-center">@source.LocalTime.ToShortTimeString()</td>
								<td>
									@if (source.IsShort)
									{
										<span class="badge badge-pill badge-secondary">Short</span>
									}
									@if (source.IsLoop)
									{
										<span class="badge badge-pill badge-success">Loop</span>
									}

									@if (source.IsBike)
									{
										<span class="badge badge-pill badge-info">Bike</span>
									}
									@if (source.IsWalk)
									{
										<span class="badge badge-pill badge-primary">Walk</span>
									}
									@if (source.IsFast)
									{
										<span class="badge badge-pill badge-warning">Fast</span>
									}
									@if (source.IsBad)
									{
										<span class="badge badge-pill badge-danger">Bad</span>
									}
								</td>
								<td>@source.Elapsed.TotalHours.ToString("0.0")</td>
								<td class="text-@(source.GetDistanceCss(source.Distance))">@source.Distance.ToString("#,##0.0")</td>
								<td>@source.Metadata.Country.Name</td>
								<td>
									@foreach (var region in source.Regions)
									{
										<div>@region.RegionName</div>
									}
								</td>
								<td class="small">
									@foreach (var place in source.Places)
									{
										<div>@place.Name</div>
									}
								</td>
								<td>
									<a class="btn btn-sm btn-success" href="@TrackViewModel.GetPreviewUrl(source.Uri)">Preview</a>
									@if (source.Trail != null)
									{
										<a class="btn btn-sm btn-primary" href="@TrailViewModel.GetDisplayUrl(source.Trail.ID)">Display</a>
									}
									else
									{
										<a class="btn btn-sm btn-outline-secondary" href="@TrackViewModel.GetExtractUrl(source.Uri)">Import</a>
									}
								</td>
							</tr>
							index++;
						}
					}
				</tbody>
			</table>
		}
	</div>
}