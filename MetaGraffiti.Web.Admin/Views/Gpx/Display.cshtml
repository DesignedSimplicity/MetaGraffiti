@model MetaGraffiti.Web.Admin.Models.GpxViewModel

@Html.Partial("_Gpx")

@{
	var gpx = Model.SelectedGpx;
	var data = Model.SelectedGpx.Data;
	var filtered = gpx.FilteredPoints;
}

<style>
	.js-point-row:hover {
		cursor: crosshair;
		color: #900;
	}

	#map-container {
		position: fixed;
		top: 0;
		left: 50%;
		right: 100%;
		bottom: 100%;
		height: 100%;
		width: 50%;
	}

	#map {
		width: 100%;
		height: 100%;
	}
</style>

<script src="https://maps.googleapis.com/maps/api/js?key=@(AutoConfig.GoogleMapsApiKey)"></script>
<script src="~/Scripts/_graffiti/googleMaps.js"></script>
<script>
	var _marker = null;
	var _track = [
		@foreach (var p in filtered)
			{
				<text>{ lat: @p.Latitude, lng: @p.Longitude },</text>
			}
		];

	$(document).ready(function () {
		initMap();
		loadTrack();

		$(".js-point-row").hover(function () {
			if (_marker != null) _marker.setMap(null);

			var lat = $(this).data("lat");
			var lng = $(this).data("lng");
			var id = $(this).data("id").toString();
			_marker = markPoint(lat, lng, id);
		});

		$(".js-point-row").click(function () {
			var lat = $(this).data("lat");
			var lng = $(this).data("lng");
			gotoPoint(lat, lng);
		});

		$(".js-location-button").click(function () {
			$("#LocationName").val('...');
			lookupLocation(_track[0].lat, _track[0].lng, setLocation);
		});
	});

	function loadTrack() {
		showTrack(_track);

		markStart(_track[0].lat, _track[0].lng);
		markStop(_track[_track.length - 1].lat, _track[_track.length - 1].lng);

		//lookupLocation(_track[0].lat, _track[0].lng, setLocation);
	}

	function setLocation(location) {
		$("#LocationName").val(location);
		$("#LocationName").parent().addClass("has-warning");
	}
</script>

<div id="map-container">
	<div id="map">
	</div>
</div>

<div class="row">
	<div class="col-sm-6">

		<div class="row">
			<div class="col-sm-6">
				<form method="post" action="/gpx/update">
					<input type="hidden" name="Uri" value="@data.Uri" />
					<div class="form-group">
						<label for="name">Name</label>
						<input type="text" class="form-control" name="Name" placeholder="Name" value="@data.Name">
					</div>
					<div class="form-group">
						<label for="description">Description</label>
						<input type="text" class="form-control" name="Description" placeholder="Description" value="@data.Description">
					</div>
					<div class="form-group">
						<label for="country">Location</label>
						<div class="input-group">
							<input type="text" class="form-control" id="LocationName" name="LocationName" placeholder="Location" value="@data.LocationName">
							<div class="input-group-append">
								<button class="btn btn-outline-secondary js-location-button" type="button">Lookup</button>
							</div>
						</div>
					</div>
					<div class="form-group">
						<label for="timezone">Timezone</label>
						<input type="text" class="form-control" name="Timezone" placeholder="Timezone" value="@(data.Timezone?.Name??"")">
					</div>
					<button type="submit" class="btn btn-success">Update Metadata</button>
					<a href="/gpx/export/?uri=@data.Uri" class="btn btn-outline-primary">Export to GPX</a>
					<a href="/gpx/export/?format=kml&uri=@data.Uri" class="btn btn-outline-info">Export to KML</a>
				</form>
			</div>
			<div class="col-sm-4">
				<form method="post" action="/gpx/filter">
					<input type="hidden" name="Uri" value="@data.Uri" />
					<div class="form-group">
						<label for="start">Start Time</label>
						<input type="text" class="form-control" name="FilterStart" placeholder="Start Time" value="@(gpx.FilterStart.HasValue ? gpx.FilterStart.Value : gpx.StartTime)">
					</div>
					<div class="form-group">
						<label for="finish">Finish Time</label>
						<input type="text" class="form-control" name="FilterFinish" placeholder="Finish Time" value="@(gpx.FilterFinish.HasValue ? gpx.FilterFinish.Value : gpx.FinishTime)">
					</div>
					<div class="form-group">
						<label for="dop">DOP Filter</label>
						<input type="text" class="form-control" name="FilterDOP" placeholder="Maximum DOP" value="@(gpx.FilterDOP.HasValue ? gpx.FilterDOP.Value.ToString() : "")">
					</div>
					<div class="form-group">
						<label for="sat">Satellites Filter</label>
						<input type="text" class="form-control" name="FilterGPS" placeholder="Minimum Satellites" value="@(gpx.FilterGPS.HasValue ? gpx.FilterGPS.Value.ToString() : "")">
					</div>
					<button type="submit" class="btn btn-warning">Apply Filter</button>
					<a href="/gpx/filter/?uri=@data.Uri" class="btn btn-outline-danger">Reset Filter</a>
				</form>
			</div>
			<div class="col-sm-2">
				<div class="form-group">
					<label>Elapsed Time</label>
					<input readonly type="text" class="form-control" value="@gpx.FilteredElapsedTime">
				</div>
				<div class="form-group">
					<label>Linear Distance</label>
					<input readonly type="text" class="form-control" value="@gpx.FilteredLinearDistance.KM.ToString("0.0") km">
				</div>
				<div class="form-group">
					<label>Actual Distance</label>
					<input readonly type="text" class="form-control" value="@gpx.FilteredActualDistance.KM.ToString("0.0") km">
				</div>
				<div class="form-group">
					<label>Up/Down</label>
					<input readonly type="text" class="form-control" value="@gpx.FilteredElevationUp.Meters.ToString("0") / @gpx.FilteredElevationDown.Meters.ToString("0") m">
				</div>
			</div>
		</div>
		<br />
		<table class="table table-striped table-bordered table-condensed">
			<tr class="thead-dark">
				<th>#</th>
				<th>UTC Timestamp</th>
				<th>Local Time</th>
				<th>Lat / Long</th>
				<th>Speed</th>
				<th>Alt</th>
				<th>Sats</th>
				<th>H</th>
				<th>V</th>
				<th>P</th>
				<th>T</th>
				<th>S</th>
				<th>C</th>
			</tr>
			<tr class="mark">
				<th>@gpx.File.Points.Count()</th>
				<th>
					UTC @(gpx.Timezone.OffsetUTC.TotalHours.ToString("0")):00
					@gpx.Timezone.TZID.Replace("/", " / ")<br />
					<br />
				</th>
				<th>
					@gpx.StartTime.ToLongDateString()<br />
					@gpx.StartTime.ToLongTimeString()<br />
				</th>
				<th class="small font-weight-bold">
					<div>@gpx.Bounds.NorthWest.Latitude.ToString("0.000000"), @gpx.Bounds.NorthWest.Longitude.ToString("0.000000")</div>
					<div>&nbsp;</div>
					<div class="text-right">@gpx.Bounds.SouthEast.Latitude.ToString("0.000000"), @gpx.Bounds.SouthEast.Longitude.ToString("0.000000")</div>
				</th>
				<th class="text-right">@gpx.File.Velocity.Min.ToString("0.0")<br />@gpx.File.Velocity.Avg.ToString("0.0")<br />@gpx.File.Velocity.Max.ToString("0.0")</th>
				<th class="text-right">@gpx.File.Elevation.Min.ToString("0")<br />@gpx.File.Elevation.Avg.ToString("0")<br />@gpx.File.Elevation.Max.ToString("0")</th>
				<th class="text-right">@gpx.File.Satellites.Min.ToString("0")<br />@gpx.File.Satellites.Avg.ToString("0")<br />@gpx.File.Satellites.Max.ToString("0")</th>
				<th class="@gpx.GetDOPCss(gpx.File.HDOP.Max)">
					@gpx.File.HDOP.Min.ToString("0.0")<br />@gpx.File.HDOP.Avg.ToString("0.0")<br />@gpx.File.HDOP.Max.ToString("0.0")
				</th>
				<th class="@gpx.GetDOPCss(gpx.File.VDOP.Max)">
					@gpx.File.VDOP.Min.ToString("0.0")<br />@gpx.File.VDOP.Avg.ToString("0.0")<br />@gpx.File.VDOP.Max.ToString("0.0")
				</th>
				<th class="@gpx.GetDOPCss(gpx.File.PDOP.Max)">
					@gpx.File.PDOP.Min.ToString("0.0")<br />@gpx.File.PDOP.Avg.ToString("0.0")<br />@gpx.File.PDOP.Max.ToString("0.0")
				</th>
				<th colspan="3">
					<div>Track</div>
					<div class="text-center">Segment</div>
					<div class="text-right">Course</div>
				</th>
			</tr>
			@foreach (var t in gpx.File.Tracks)
	{
		var points = 1;
		foreach (var p in t.Points)
		{
			var utc = gpx.Timezone.FromUTC(p.Timestamp.Value);
			<tr class="js-point-row @(filtered.Any(x => x.Timestamp == p.Timestamp) ? "" : "table-secondary text-muted")" data-lat="@p.Latitude" data-lng="@p.Longitude" data-id="@points">
				<td>@points</td>
				<td>@p.Timestamp.Value.ToString("yyyy-MM-dd")<br />@p.Timestamp.Value.ToString("hh:mm:ss tt")</td>
				<td>@utc.ToString("yyyy-MM-dd")<br />@utc.ToString("hh:mm:ss tt")</td>
				<td>@p.Latitude.ToString("0.000000"),<br />@p.Longitude.ToString("0.000000")</td>
				<td class="text-right">@((p.Speed ?? 0).ToString("#,##0.0"))</td>
				<td class="text-right">@((p.Elevation ?? 0).ToString("#,##0"))</td>
				<td class="text-right">@p.Sats</td>
				<td class="table-@gpx.GetDOPCss(p.HDOP)">@p.HDOP</td>
				<td class="table-@gpx.GetDOPCss(p.VDOP)">@p.VDOP</td>
				<td class="table-@gpx.GetDOPCss(p.PDOP)">@p.PDOP</td>
				<td>@t.Number @t.Name</td>
				<td>@p.Segment</td>
				<td class="text-right">@((p.Course ?? 0).ToString("##0"))</td>
			</tr>
	points++;
}
}
		</table>
	</div>
</div>
