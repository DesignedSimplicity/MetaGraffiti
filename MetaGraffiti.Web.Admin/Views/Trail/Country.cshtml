@using MetaGraffiti.Web.Admin.Models;
@model TrailViewModel

@Html.Partial("_Nav")

<script>
	var _trails = @JsonHelper.GetJson(Model.Trails);
	var _bounds = null;
	var _start = null;
	var _finish = null;

	$(document).ready(function () {
		initMap();

		_bounds = new google.maps.LatLngBounds();
		for (index = 0; index < _trails.length; index++) {
			var color = getMapColor(index);

			var tracks = _trails[index].tracks;
			for (var j = 0; j < tracks.length; j++) {
				var points = tracks[j].points;
				showTrack(points, color);

				for (var i = 0; i < points.length; i++) {
					_bounds.extend(new google.maps.LatLng(points[i].lat, points[i].lng));
				}
			}

			$("table > tbody > tr").eq(index).children().eq(0).css('background-color', color);
		}
		if (_trails.length > 0) _mapGoogle.fitBounds(_bounds);

		$(".js-mappable-row").hover(function () {
			if (_start) _start.setMap(null);
			if (_finish) _finish.setMap(null);

			var index = $(this).index();

			var points = _trails[index].tracks[0].points;
			var start = points[0];
			var finish = points[points.length - 1];

			_finish = markFinish(finish.lat, finish.lng);
			_start = markStart(start.lat, start.lng);
		});

		$(".js-mappable-row").click(function () {
			var index = $(this).index();


			var points = _trails[index].tracks[0].points;
			var bounds = new google.maps.LatLngBounds();
			for (var i = 0; i < points.length; i++) {
				bounds.extend(new google.maps.LatLng(points[i].lat, points[i].lng));
			}
			_mapGoogle.fitBounds(bounds);
		});

		$(".js-reset-view").click(function () {
			if (_trails.length > 0) _mapGoogle.fitBounds(_bounds);
		});
	});
</script>

<div id="map-container">
	<div id="map">
	</div>
</div>

<div class="row">
	<div class="col-sm-6">
		<h2><a href="@TrailViewModel.GetCountryUrl(Model.Country.ISO2)">@Model.Country.Name</a> @(Model.Region == null ? "" : @" \ " + Model.Region.RegionName) Trails</h2>
		<table class="table table-sm table-striped">
			<thead class="table-dark">
				<tr>
					<th class="text-center">#</th>
					<th>
						Region&nbsp;
						<a href="@TrailViewModel.GetCountryUrl(Model.Country.ISO2, (Model.Region?.RegionISO??""), "Region")" class="badge badge-@(Model.IsSortSelected("Region") ? "success" : "light")">Region</a>
					</th>
					<th>
						Trail&nbsp;
						<a href="@TrailViewModel.GetCountryUrl(Model.Country.ISO2, (Model.Region?.RegionISO??""), "Name")" class="badge badge-@(Model.IsSortSelected("Name") ? "success" : "light")">Name</a>
					</th>
					<th>Tags</th>
					<th class="text-right">
						Date&nbsp;
						<a href="@TrailViewModel.GetCountryUrl(Model.Country.ISO2, (Model.Region?.RegionISO??""), "Newest")" class="badge badge-@(Model.IsSortSelected("Newest") ? "success" : "light")">Newest</a>
						<a href="@TrailViewModel.GetCountryUrl(Model.Country.ISO2, (Model.Region?.RegionISO??""), "Oldest")" class="badge badge-@(Model.IsSortSelected("Oldest") ? "success" : "light")">Oldest</a>
					</th>
				</tr>
			</thead>
			<tbody>
				@{
					var index = 0;
					foreach (var trail in Model.Trails)
					{
						<tr class="js-mappable-row">
							<td class="text-center">@(index + 1)</td>
							<td>
								<a href="@TrailViewModel.GetCountryUrl(Model.Country.ISO2, (trail.Region?.RegionISO??""), "Name")">@(trail.Region?.RegionName ?? "")</a>
							</td>
							<td>
								<span class="h6"><a href="@TrailViewModel.GetDisplayUrl(trail.ID)">@trail.Name</a></span>
								<div class="small">@trail.Description</div>
							</td>
							<td>
								<span class="small">@Html.Raw((trail.Keywords??"").Replace(",", "<br />"))</span>
							</td>
							<td class="text-right">@trail.LocalDate.ToString("yyyy-MM-dd")</td>
						</tr>
						index++;
					}
				}
			</tbody>
		</table>
	</div>
</div>