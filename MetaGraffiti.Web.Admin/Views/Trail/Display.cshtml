@using MetaGraffiti.Web.Admin.Models;
@model TrailViewModel

@Html.Partial("_Nav")

<script>
	var _tracks = @Model.GetTrackJson();
	var _bounds = null;
	var _start = null;
	var _finish = null;
	var _graphs = null;

	$(document).ready(function () {
		initMap();

		_bounds = new google.maps.LatLngBounds();
		for (index = 0; index < _tracks.length; index++) {
			var color = getMapColor(index);
			showTrack(_tracks[index].points, color);

			var points = _tracks[index].points;
			for (var i = 0; i < points.length; i++) {
				_bounds.extend(new google.maps.LatLng(points[i].lat, points[i].lng));
			}

			$("table > tbody > tr").eq(index * 3).css('background-color', getInfoColor(index));
			$("table > tbody > tr").eq(index * 3).children().eq(0).css('background-color', color);
		}
		if (_tracks.length > 0) _mapGoogle.fitBounds(_bounds);

		$(".js-mappable-row").hover(function () {
			if (_start) _start.setMap(null);
			if (_finish) _finish.setMap(null);

			var index = $(this).index() / 3;

			var points = _tracks[index].points;
			var start = points[0];
			var finish = points[points.length - 1];

			_start = markStart(start.lat, start.lng);
			_finish = markFinish(finish.lat, finish.lng);
		});

		$(".js-mappable-row").click(function () {
			var index = $(this).index() / 3;

			if (_graphs) $(_graphs).hide();
			_graphs = $("table > tbody > tr").eq((index * 3) + 2).children().first();
			if (_graphs.hasClass("d-none")) _graphs.hide().removeClass("d-none");
			_graphs.show();


			var points = _tracks[index].points;
			var bounds = new google.maps.LatLngBounds();
			for (var i = 0; i < points.length; i++) {
				bounds.extend(new google.maps.LatLng(points[i].lat, points[i].lng));
			}
			_mapGoogle.fitBounds(bounds);
		});

		$(".js-reset-view").click(function () {
			if (_graphs) $(_graphs).hide();
			if (_start) _start.setMap(null);
			if (_finish) _finish.setMap(null);

			if (_tracks.length > 0) _mapGoogle.fitBounds(_bounds);
		});
	});
</script>

<div id="map-container">
	<div id="map">
	</div>
</div>

<div class="row">
	<div class="col-sm-6">
		@if (Model.HasError)
		{
			<div class="alert alert-danger">@Model.ErrorMessages.First()</div>
		}
		<div class="row">
			<div class="col-sm-8">
				<div class="h2">@Model.Trail.Name</div>
				<div>@Model.Trail.Description</div>
				<div class="h6">@Model.Trail.Keywords</div>
				<div class="h6">
					<a href="@Model.Trail.Url">@Model.Trail.UrlName</a>
				</div>
				<div class="small">
					@Model.Trail.Uri
				</div>
			</div>
			<div class="col-sm-4 text-right">
				<form method="post" action="@TrailViewModel.GetModifyUrl()">
					<input type="hidden" name="ID" value="@Model.Trail.ID" />
					<button type="submit" class="btn btn-outline-secondary">Edit Tracks</button>
					<button type="button" class="btn btn-outline-success js-reset-view">Reset View</button>
				</form>
				<div class="h4 mt-2">
					<div class="badge badge-info">@Model.Trail.ElapsedTimeText</div>
					<div class="badge badge-success">@Model.Trail.TotalKilometers.ToString("0.0") km</div>
				</div>
			</div>
		</div>
		<hr />

		<div class="row">
			<div class="col-sm-8">
				<div class="h4">
					@if (Model.Trail.Region != null)
					{
						<a href="@TrailViewModel.GetCountryUrl(Model.Trail.Country.Name, Model.Trail.Region.RegionISO)">@Model.Trail.Region.RegionName</a><span>,</span>
					}
					<a href="@TrailViewModel.GetCountryUrl(Model.Trail.Country.Name)">@Model.Trail.Country.Name</a>
				</div>
				<div class="h5">
					@foreach (var place in Model.Trail.ViaPlaces.OrderBy(x => x.Bounds.Area))
					{
						<div class="mt-2">
							<a href="@CartoViewModel.GetEditUrl(place.Key)">@place.Name</a> <span class="h6"><span class="badge badge-pill badge-secondary">@place.Bounds.Area.ToString("0.0")</span></span>
						</div>
					}
				</div>
			</div>
			<div class="col-sm-4 text-right">
				<div class="h5">
					<a href="@TrailViewModel.GetReportUrl(Model.Trail.LocalDate.Year, Model.Trail.LocalDate.Month)">@Model.Trail.LocalDate.ToString("MMMM")</a>
					<a href="@TrailViewModel.GetReportUrl(Model.Trail.LocalDate.Year)">@Model.Trail.LocalDate.Year</a>
				</div>
				<div class="h5">
					<span>@Model.Trail.LocalDate.ToString("dd") @Model.Trail.LocalDate.ToString("dddd")</span><br />
				</div>
				<div>
					@Model.Trail.Timezone.Name<br /><small>(@Model.Trail.Timezone.DisplayOffsetUTC)</small>
				</div>
			</div>
		</div>
		<hr />
		<table class="table table-striped table-bordered">
			<thead class="thead-dark">
				<tr class="table-sm">
					<th class="text-center">#</th>
					<th>Track</th>
					<th>Start <small>Time / Location</small></th>
					<th>Finish <small>Time / Location</small></th>
					<th class="text-right">Time <small>Elapsed</small><br />Speed <small>Average</small></th>
					<th class="text-right">Distance <small>Estimated</small><br />Elevation <small>Asc/Desc</small></th>
				</tr>
			</thead>
			<tbody>
				@{
					var count = 0;
					foreach (var track in Model.Trail.Tracks)
					{
						<tr class="js-mappable-row">
							<td rowspan="3" class="text-center">@(++count)</td>
							<td colspan="3">
								<span class="font-weight-bold">@track.Name</span>
								<span class="small">@track.Description</span>
							</td>
							<td class="text-right font-weight-bold text-nowrap">
								@track.ElapsedTimeText
							</td>
							<td class="text-right font-weight-bold">
								@track.EstimatedDistance.KM.ToString("0.0") km
							</td>
						</tr>
						<tr>
							<td>
								<div>
									@foreach (var tag in track.AutoTags)
									{
										<span class="badge badge-pill badge-@CssHelper.GetTagCss(tag)">@tag</span>
									}
								</div>
								<div class="mt-2">
									@if (!String.IsNullOrWhiteSpace(track.Source))
									{
										<a class="badge badge-info" href="@TrackViewModel.GetPreviewUrl(track.Source)">@track.Source</a>
									}
								</div>
							</td>
							<td>
								<div class="text-nowrap">
									@track.StartTime.ToString("hh:mm:ss tt") <small>@track.StartTime.ToString("yyyy-MM-dd")</small>
								</div>
								<div class="mt-2">
									@if (track.StartPlace != null)
									{
										<a href="@CartoViewModel.GetEditUrl(track.StartPlace.Key)">@track.StartPlace.Name</a>
									}
								</div>
							</td>
							<td>
								<div class="text-nowrap">
									@track.FinishTime.ToString("hh:mm:ss tt") <small>@track.FinishTime.ToString("yyyy-MM-dd")</small>
								</div>
								<div class="mt-2">
									@if (track.FinishPlace != null)
									{
										<a href="@CartoViewModel.GetEditUrl(track.FinishPlace.Key)">@track.FinishPlace.Name</a>
									}
								</div>
							</td>
							<td class="text-right">
								@track.EstimatedKmh.ToString("0.0") <small>km/h</small>
							</td>
							<td class="text-right">
								<div class="text-success">@track.EstimatedAscent.ToString("#,##0") m</div>
								<div class="mt-2"></div>
								<div class="text-danger">@track.EstimatedDescent.ToString("#,##0") m</div>
							</td>
						</tr>
						<tr>
							<td colspan="5" class="d-none">
								<b>Elevation Graph Goes Here</b>
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
</div>