@using MetaGraffiti.Web.Admin.Models;
@model TopoViewModel

@Html.Partial("_Nav")

@{
	var trail = Model.SelectedTrail;
}

<script>
	var _tracks = @JsonHelper.GetJson(trail);
	var _bounds = null;
	var _start = null;
	var _finish = null;
	var _graphs = null;

	$(document).ready(function () {
		initMap();

		_bounds = new google.maps.LatLngBounds();
		for (index = 0; index < _tracks.length; index++) {
			var color = getMapColor(index);
			showTrack(_tracks[index].points, color);

			var points = _tracks[index].points;
			for (var i = 0; i < points.length; i++) {
				_bounds.extend(new google.maps.LatLng(points[i].lat, points[i].lng));
			}

			$("table > tbody > tr").eq(index * 3).css('background-color', getInfoColor(index));
			$("table > tbody > tr").eq(index * 3).children().eq(0).css('background-color', color);
		}
		if (_tracks.length > 0) _mapGoogle.fitBounds(_bounds);

		$(".js-mappable-row").hover(function () {
			if (_start) _start.setMap(null);
			if (_finish) _finish.setMap(null);

			var index = $(this).index() / 3;

			var points = _tracks[index].points;
			var start = points[0];
			var finish = points[points.length - 1];

			_start = markStart(start.lat, start.lng);
			_finish = markFinish(finish.lat, finish.lng);
		});

		$(".js-mappable-row").click(function () {
			var index = $(this).index() / 3;

			if (_graphs) $(_graphs).hide();
			_graphs = $("table > tbody > tr").eq((index * 3) + 2).children().first();
			if (_graphs.hasClass("d-none")) _graphs.hide().removeClass("d-none");
			_graphs.show();


			var points = _tracks[index].points;
			var bounds = new google.maps.LatLngBounds();
			for (var i = 0; i < points.length; i++) {
				bounds.extend(new google.maps.LatLng(points[i].lat, points[i].lng));
			}
			_mapGoogle.fitBounds(bounds);
		});

		$(".js-reset-view").click(function () {
			if (_graphs) $(_graphs).hide();
			if (_start) _start.setMap(null);
			if (_finish) _finish.setMap(null);

			if (_tracks.length > 0) _mapGoogle.fitBounds(_bounds);
		});
	});
</script>

<div id="map-container">
	<div id="map">
	</div>
</div>

<div class="row">
	<div class="col-sm-6">
		@if (Model.HasError)
		{
			<div class="alert alert-danger">@Model.ErrorMessages.First()</div>
		}
		<div class="row">
			<div class="col-sm-8">
				<div class="h2">@trail.Name</div>
				<div class="h4">@trail.Keywords</div>
				<div>@trail.Description</div>
				<div class="small mt-1">
					@trail.Source
				</div>
			</div>
			<div class="col-sm-4 text-right">
				<form method="post" action="@TopoViewModel.GetModifyUrl()">
					<input type="hidden" name="ID" value="@trail.Key" />
					<button type="submit" class="btn btn-outline-success">Edit Tracks</button>
					<button type="button" class="btn btn-outline-secondary js-reset-view">Reset View</button>
				</form>
				<div class="h4 mt-2">
					<div class="badge badge-secondary">@TextHelper.GetTotalDays(trail.StartLocal, trail.FinishLocal)</div>
					<div class="badge badge-info">@TextHelper.GetElapsedTime(trail.Stats.ElapsedTime)</div>
					<div class="badge badge-success">@trail.Stats.EstimatedKM.ToString("0.0") km</div>
					<div class="h6">
						<a href="@trail.UrlLink">@trail.UrlText</a>
					</div>
				</div>
			</div>
		</div>
		<hr />

		<div class="row">
			<div class="col-sm-8">
				<div class="h4">
					@if (trail.Region != null)
					{
						<a class="topo-color" href="@TopoViewModel.GetCountryUrl(trail.Country.Name, trail.Region.RegionISO)">@trail.Region.RegionName</a><span>,</span>
					}
					<a class="topo-color" href="@TopoViewModel.GetCountryUrl(trail.Country.Name)">@trail.Country.Name</a>
				</div>
				<div class="h5">
					@foreach (var place in Model.ConsolidatePlaces(trail))
					{
						<div class="mt-2">
							<a href="@CartoViewModel.GetEditUrl(place.Key)">@place.Name</a> <span class="h6"><span class="badge badge-pill badge-secondary">@place.Bounds.Area.ToString("0.0")</span></span>
						</div>
					}
				</div>
			</div>
			<div class="col-sm-4 text-right">
				<div class="h5">
					<a class="topo-color" href="@TopoViewModel.GetReportUrl(trail.StartLocal.Year, trail.StartLocal.Month)">@trail.StartLocal.ToString("MMMM")</a>
					<a class="topo-color" href="@TopoViewModel.GetReportUrl(trail.StartLocal.Year)">@trail.StartLocal.Year</a>
				</div>
				<div class="h5">
					<span>@trail.StartLocal.ToString("dd") @trail.StartLocal.ToString("dddd")</span><br />
				</div>
				<div>
					@trail.Timezone.Name<br /><small>(@trail.Timezone.DisplayOffsetUTC)</small>
				</div>
			</div>
		</div>
		<hr />
		<table class="table table-striped table-bordered">
			<thead class="thead-dark">
				<tr class="table-sm">
					<th class="text-center">#</th>
					<th>Track</th>
					<th>Start <small>Time / Location</small></th>
					<th>Finish <small>Time / Location</small></th>
					<th class="text-right">Time <small>Elapsed</small><br />Speed <small>Average</small></th>
					<th class="text-right">Distance <small>Estimated</small><br />Elevation <small>Asc/Desc</small></th>
				</tr>
			</thead>
			<tbody>
				@{
					var count = 0;
					foreach (var track in trail.TopoTracks)
					{
						var stats = track.Stats;
						<tr class="js-mappable-row">
							<td rowspan="3" class="text-center font-weight-bold h3">@(++count)</td>
							<td colspan="3">
								<span class="h4">@track.Name</span>
								<span class="small">@track.Description</span>
							</td>
							<td class="text-right h5 text-nowrap">
								@TextHelper.GetElapsedTime(stats.ElapsedTime)
							</td>
							<td class="text-right h5">
								@stats.DistanceWithElevation.KM.ToString("0.0") km
							</td>
						</tr>
						<tr>
							<td>
								<div>
									@if (!String.IsNullOrWhiteSpace(track.Source))
									{
										<a class="badge badge-info" href="@TopoViewModel.GetPreviewUrl(track.Source)">@track.Source</a>
									}
								</div>
							</td>
							<td class="h5">
								<div class="text-nowrap">
									@track.StartLocal.ToString("hh:mm:ss tt") <small>@track.StartLocal.ToString("yyyy-MM-dd")</small>
								</div>
								<div class="mt-2">
									@if (track.StartPlace != null)
									{
										<a href="@CartoViewModel.GetEditUrl(track.StartPlace.Key)">@track.StartPlace.Name</a>
									}
								</div>
							</td>
							<td class="h5">
								<div class="text-nowrap">
									@track.FinishLocal.ToString("hh:mm:ss tt") <small>@track.FinishLocal.ToString("yyyy-MM-dd")</small>
								</div>
								<div class="mt-2">
									@if (track.FinishPlace != null)
									{
										<a href="@CartoViewModel.GetEditUrl(track.FinishPlace.Key)">@track.FinishPlace.Name</a>
									}
								</div>
							</td>
							<td class="text-right font-weight-bold">
								@stats.EstimatedKPH.ToString("0.0") <small>km/h</small>
							</td>
							<td class="text-right font-weight-bold">
								<div class="text-success">@stats.EstimatedMetersAscent.ToString("#,##0") m</div>
								<div class="mt-2"></div>
								<div class="text-danger">@stats.EstimatedMetersDescent.ToString("#,##0") m</div>
							</td>
						</tr>
						<tr>
							<td colspan="5" class="d-none">
								<b>Elevation profile...</b>
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	</div>
</div>